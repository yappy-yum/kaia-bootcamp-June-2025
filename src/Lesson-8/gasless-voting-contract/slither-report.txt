INFO:Detectors:
Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (src/Registry.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

INFO:Detectors:
Vote.StopVote(uint256[],uint256,uint256,bytes32) (src/Vote.sol#78-116) should emit an event for: 
	- s_UserRewards = s_totalRewards / (2 * totalUsers) (src/Vote.sol#109) 
	- s_WinnerId = WinnerId (src/Vote.sol#111) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

INFO:Detectors:
Hashes.efficientKeccak256(bytes32,bytes32) (lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol#24-30) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol#25-29)
Ownable.constructor(address) (src/Utils/Ownable.sol#12-16) uses assembly
	- INLINE ASM (src/Utils/Ownable.sol#13-15)
Ownable.getOwner() (src/Utils/Ownable.sol#42-46) uses assembly
	- INLINE ASM (src/Utils/Ownable.sol#43-45)
Ownable.changeOwner(address) (src/Utils/Ownable.sol#52-56) uses assembly
	- INLINE ASM (src/Utils/Ownable.sol#53-55)
Season.getCurrentState() (src/Utils/Season.sol#69-73) uses assembly
	- INLINE ASM (src/Utils/Season.sol#70-72)
Season._incState() (src/Utils/Season.sol#79-102) uses assembly
	- INLINE ASM (src/Utils/Season.sol#81-92)
	- INLINE ASM (src/Utils/Season.sol#95-101)
Vote.constructor(string[],address,uint256) (src/Vote.sol#45-76) uses assembly
	- INLINE ASM (src/Vote.sol#46-57)
	- INLINE ASM (src/Vote.sol#59-70)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

INFO:Detectors:
2 different versions of Solidity are used:
	- Version constraint ^0.8.20 is used by:
		-^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol#4)
		-^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol#5)
	- Version constraint ^0.8.0 is used by:
		-^0.8.0 (src/Utils/Ownable.sol#2)
		-^0.8.0 (src/Utils/Season.sol#2)
		-^0.8.0 (src/Vote.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

INFO:Detectors:
Version constraint ^0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol#5)
Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (src/Utils/Ownable.sol#2)
	- ^0.8.0 (src/Utils/Season.sol#2)
	- ^0.8.0 (src/Vote.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

INFO:Detectors:
Low level call in Vote.claim(uint256,bytes32,bytes32[]) (src/Vote.sol#118-129):
	- (ok,None) = msg.sender.call{value: s_UserRewards}() (src/Vote.sol#127)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

INFO:Detectors:
Enum Season.state (src/Utils/Season.sol#6-10) is not in CapWords
Function Vote.StopVote(uint256[],uint256,uint256,bytes32) (src/Vote.sol#78-116) is not in mixedCase
Parameter Vote.StopVote(uint256[],uint256,uint256,bytes32)._voteResult (src/Vote.sol#79) is not in mixedCase
Parameter Vote.StopVote(uint256[],uint256,uint256,bytes32).WinnerId (src/Vote.sol#81) is not in mixedCase
Parameter Vote.StopVote(uint256[],uint256,uint256,bytes32)._merkleRoot (src/Vote.sol#82) is not in mixedCase
Variable Vote.s_UserRewards (src/Vote.sol#32) is not in mixedCase
Variable Vote.s_WinnerId (src/Vote.sol#37) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

INFO:Detectors:
Vote.constructor(string[],address,uint256) (src/Vote.sol#45-76) uses literals with too many digits:
	- mload(uint256)(_metadatas) < 2 | ! supply > 1000000000000000000 (src/Vote.sol#47-56)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Slither:src analyzed (6 contracts with 94 detectors), 21 result(s) found
